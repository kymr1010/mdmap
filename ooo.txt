diff --git a/backend/src/handlers/card_card.rs b/backend/src/handlers/card_card.rs
index f9f5237..21ea06f 100644
--- a/backend/src/handlers/card_card.rs
+++ b/backend/src/handlers/card_card.rs
@@ -1,20 +1,29 @@
-use crate::models::CardCardRow;
+use crate::models::{CardCardRow, CardRelation};
 use axum::{http::StatusCode, response::IntoResponse, Extension, Json};
 use serde_json::json;
 use sqlx::Pool;
 
 pub async fn get_connectors(
     Extension(pool): Extension<Pool<sqlx::MySql>>,
-) -> Json<Vec<CardCardRow>> {
-    let rows = sqlx::query_as::<_, CardCardRow>(
-        r#"
-      SELECT card_parent_id, card_child_id, id, path
-      FROM card_card
-    "#,
-    )
+) -> Json<Vec<CardRelation>> {
+    let rows = sqlx::query_as::<_, CardCardRow>(r#"
+      SELECT c.card_parent_id, c.card_child_id, c.id, c.path
+      FROM card_card c
+    "#)
     .fetch_all(&pool)
     .await
     .unwrap_or_default();
+
+    let connectors: Vec<CardRelation> = rows
+        .into_iter()
+        .map(|r| CardCardRow {
+            card_parent_id: r.card_parent_id,
+            card_child_id: r.card_child_id,
+            id: r.id,
+        })
+        .collect();
+
+    Json(connectors)
 }
 
 pub async fn connect_card_to_card(
diff --git a/backend/src/models.rs b/backend/src/models.rs
index 7c7ad83..76b318f 100644
--- a/backend/src/models.rs
+++ b/backend/src/models.rs
@@ -5,4 +5,4 @@ mod tag;
 pub use tag::{Tag, TagRow};
 
 mod card_card;
-pub use card_card::CardCardRow;
+pub use card_card::{CardCardRow, CardRelation};
diff --git a/backend/src/models/card_card.rs b/backend/src/models/card_card.rs
index 07027c8..cfad1a7 100644
--- a/backend/src/models/card_card.rs
+++ b/backend/src/models/card_card.rs
@@ -7,3 +7,11 @@ pub struct CardCardRow {
     pub card_child_id: i64,
     pub path: String,
 }
+
+#[derive(Serialize, Deserialize)]
+pub struct CardRelation {
+    pub card_parent_id: i64,
+    pub card_child_id: i64,
+    pub id: i64,
+    pub path: String,
+}
\ No newline at end of file
diff --git a/mml/elic b/mml/elic
index 50018d5..7b1651b 100644
--- a/mml/elic
+++ b/mml/elic
@@ -1,35 +1,40 @@
 SoundType={soundfont}
 Tempo=77
 調＃（ドファ）
+PlayFrom(22:0:0)
 
-TR=01 CH=01 @5
-o6
+TR=01 CH=01 @1 o6
 r1. r1.
 
-r fagfc<b>cd<a2.
+rfa gfc <b>cd <a2.
 f1.> r1.
 
-r fagfc<b>cd<a2.>
-c2. f2.<e1.
+rfa gfc <b>cd <a2.>
+c2. f2. <e1.
 
-r2. ab>c-ed<b>dc-<b>
-d2. r2 d
+r2. ab>c- ed<b >dc-<b>
+d2. r2d g2. f2.
 
-TR=02 CH=01
-o4
-r 'bdf'2 r 'acf'2 r 'bdf'2 r 'acf'2
+<bab> cde cde <f<d>g
+r1.
 
-r 'bdf'2 r 'acf'2 r 'bdf'2 r 'acf'2
-r 'bdf'2 r 'acf'2 r 'bdf'2 r 'acf'2
+TR=02 CH=01 o5 v70
+r'bdf'2 r 'acf'2 r'bdf'2 r'acf'2
 
-r 'bdf'2 r 'acf'2 r 'bdf'2 r 'acf'2
-r 'acf'2 r 'bdf'2 r 'gab'2 r 'bdg'2
+r'bdf'2 r'acf'2 r'bdf'2 r'acf'2
+r'bdf'2 r'acf'2 r'bdf'2 r'acf'2
 
-r '<f->ad'2 r 'ac-e'2 r 'gbe'2 r '<d>gbe'2
-r '<c-f>a'2 r '<c->ga'2
+r'bdf'2 r'acf'2 r'bdf'2 r'acf'2
+r'acf'2 r'bdf'2 r'gab'2 r'bdg'2
 
-TR=03 CH=01 
-o3 
+r'<f->ad'2 r'ac-e'2 r'gbe'2 r'<d>gbe'2
+r'<c-f>a'2 r'<c->ga'2 r'<b>eg'2 r'<a>cf'2
+
+r'<b>eg'2 r'cfa'2 r'<a>cfa'2 r'<<b>>a''<<e>b>d'
+
+'c-ea>c-'2. '<dfa>d'2.
+
+TR=03 CH=01 o3 
 g2. d2. g2. d2.
 
 g2. d2. g2. d2.
@@ -39,4 +44,8 @@ g2. d2. g2. d2.
 g2.<b2.>e2. e2.
 
 d2.<a2.>d2. d2.
-d2. d2. d2. d2.
\ No newline at end of file
+d2. d2. e2. f2.
+
+<b2.>e2. e2. e2.
+
+'a>g'2. '<<d>ad'2.
\ No newline at end of file